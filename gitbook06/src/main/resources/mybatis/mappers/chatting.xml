<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatting">
	
	<insert id="addchatRoom" parameterType="chattingroomvo">
		<![CDATA[		
				insert into chatting values(null,#{title})
			]]>
			<selectKey keyProperty = "no" resultType="long" order="AFTER">
	         		select last_insert_id()
	      	</selectKey>
	
	</insert>
	
	<insert id="addChatRoomuser" parameterType="chattingroomvo">
		<![CDATA[		
				insert into chatting_user values(#{userNo},#{no},#{grant})
			]]>
			<selectKey keyProperty = "no" resultType="long" order="AFTER">
	         		select last_insert_id()
	      	</selectKey>
	
	</insert>
	
	<insert id="addAdminMsg" parameterType="chattingmsgvo">
											
		<![CDATA[		
				insert into message values(null,1004,#{chattingNo},now(3),#{contents},'yes','text')
			]]>
			
	</insert>
	
	<select id="chatRoomList" parameterType="long"
		resultType="chattingroomvo">
		<![CDATA[
		select a.user_no as userNo, b.no as no, a.grant ,b.title , max(c.send_date) as sendDate
        from chatting_user a, chatting b,message c
        where a.chatting_no = b.no
        and c.chatting_no=b.no
        and a.user_no=#{userNo}
        group by b.no 
        order by max(c.no) desc
		]]>
	</select>
	
	<select id="getAdminImage" parameterType="long"
		resultType="chattingmsgvo">
		<![CDATA[
		  select a.image
        from profile a , chatting_user b 
        where a.user_no=b.user_no
        and b.grant ='admin'
        and b.chatting_no=#{chatRoonNo}
		]]>
	</select>
	
	<select id="getLastMsg" parameterType="long"
		resultType="chattingmsgvo">
		<![CDATA[
		  select no,user_no as userNo,
		  		chatting_no as chattingNo,
		  		DATE_FORMAT(send_date,'%Y-%m-%d %H:%i') as sendDate,
		  		chatting_contents as contents, 
		  		
		  		read_msg as readMsg,
		  		type
        from message 
        where chatting_no=#{chatRoonNo}
        and no= (select max(no)
							from message 
							where chatting_no=#{chatRoonNo})
		]]>
	</select>
	
	<select id="inviteList" parameterType="long"
		resultType="chattingmsgvo">
		<![CDATA[
		  select a.user_no as userNo, a.grant, b.image, b.nickname as userNickname
        from chatting_user a , profile b
        where a.user_no=b.user_no
        and a.chatting_no=#{chatRoonNo}
		]]>
	</select>
	
	<select id="msgList" parameterType="long"
		resultType="chattingmsgvo">
		<![CDATA[
		select a.no, a.user_no as userNo, a.chatting_no as chattingNo,
			   DATE_FORMAT(a.send_date,'%Y-%m-%d %H:%i') as sendDate,
               a.chatting_contents as contents,
               b.nickname as userNickname,
               b.image,a.type,
               c.count
        from 
			 profile b,message a LEFT JOIN
             (	select *,count(*) as count
				from message_alarm
				where read_msg='no'
				group by msg_no) c 
                on c.msg_no=a.no
        where a.user_no=b.user_no
        and a.chatting_no= #{chatRoonNo}
		order by a.send_date desc
       
		]]>
	</select>
	
	<insert id="addUserMsg" parameterType="chattingmsgvo">
											
		<![CDATA[		
				insert into message values(null,#{userNo},#{chattingNo},now(3),#{contents},'yes',#{type})
		]]>
		<selectKey keyProperty = "no" resultType="long" order="AFTER">
	         	select last_insert_id()
	    </selectKey>
	</insert>
	
	<insert id="addCheckMsg" parameterType="chattingmsgvo">
											
		<![CDATA[		
			insert into message_alarm values(#{userNo},#{no},#{readMsg})
		]]>
		
	</insert>
	<select id="getSendDate" parameterType="long"
		resultType="string">
		<![CDATA[
		  select DATE_FORMAT(send_date,'%Y-%m-%d %H:%i') as sendDate
        from message
        where no=#{no}
		]]>
	</select>
	
	
	<select id="getAlarmList" parameterType="map"
		resultType="long">
		<![CDATA[
			select count(a.read_msg) from message_alarm a, message b 
        where a.msg_no=b.no
        and b.chatting_no=#{chattingNo}
        and a.user_no = #{userNo}
        and a.read_msg ='no'
		]]>
	</select>
	
	<update id="updateResetAlarm" parameterType="map"
		>
		<![CDATA[
		 update message_alarm a, message b set a.read_msg='yes'
		where a.msg_no=b.no
        and b.chatting_no=#{chattingNo}
        and a.user_no = #{userNo}
        and a.read_msg ='no'
		]]>
	</update>
	
	<delete id="deleteChatRoom" parameterType="map"
		>
		<![CDATA[
		delete from chatting_user 
        where user_no=#{userNo}
        and chatting_no=#{chatRoonNo}
		]]>
	</delete>
	
	<select id="getInviteList" parameterType="long"
		resultType="uservo">
		<![CDATA[
		select a.no, a.id, a.password, a.phone, a.name, a.birthday, a.gender, a.join_date as joinDate, b.no as ProfileNo, b.image, b.nickname, b.profile_contents as profileContents
		from user a ,profile b,chatting_user c 
        where  a.no = b.user_no
        and a.no=c.user_no
        and chatting_no=#{chatRoonNo}
		]]>
	</select>
	
	<select id="getChatName" parameterType="long"
		resultType="string">
		<![CDATA[
			select title from chatting where no=#{chatRoonNo}
		]]>
	</select>
	
	
</mapper>