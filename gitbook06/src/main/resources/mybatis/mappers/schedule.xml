<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="schedule">

	<select id="findToDoList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
		select a.no, a.check_date as checkDate, a.schedule_contents as scheduleContents,
				a.type, a.user_no as userNo, a.group_no as groupNo
		from schedule a, user b
		where b.id = #{id}
			and a.user_no = b.no
			and a.check_date = #{date}
			and a.type = 'todo'
			and a.group_no is null
			order by a.no desc
	]]>
	</select>


	<select id="findRepoList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
		select a.no, a.check_date as checkDate, a.schedule_contents as scheduleContents,
				a.type, a.user_no as userNo, a.group_no as groupNo
		from schedule a, user b
			where a.user_no = b.no
			and b.id = #{id}
			and a.check_date = #{date}
			and a.type = 'commit'
			and a.group_no is null
			order by a.no desc
	]]>
	</select>

	<select id="findNaviCommitList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
		select a.no, a.check_date as checkDate
		from schedule a, user b
		where a.user_no = b.no
			and b.id = #{id}
			and a.type = 'commit'
			and a.check_date like '%${date }%'
			and a.group_no is null
            group by a.check_date
			order by a.check_date desc
	]]>
	</select>



	<select id="findCheckedToDoDay" parameterType="string"
		resultType="schedulevo">
	<![CDATA[
		select a.check_date as checkDate
			from schedule a, user b
			where a.user_no = b.no
			and b.id = #{id}
			and a.type = 'todo'
			and a.group_no is null
			group by a.check_date
	]]>
	</select>

	<select id="findCheckedCommitDay" parameterType="string"
		resultType="schedulevo">
	<![CDATA[
		select a.no, count(*), a.check_date as checkDate
			from schedule a, user b
			where a.user_no = b.no
			and b.id = #{id}
			and a.type = 'commit'
			and a.group_no is null
			group by a.check_date
	]]>
	</select>


	<insert id="insertToDo" parameterType="schedulevo">
	<![CDATA[
			insert into schedule 
			values(null, #{checkDate},#{scheduleContents},'todo',#{userNo},null)
	]]>
	</insert>

	<delete id="deleteToDo" parameterType="schedulevo">
		<![CDATA[
			delete from schedule where no=#{no}
		]]>
	</delete>


	<!-- group -->
	
	
	<select id="findGroupToDoList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
			select a.no, a.check_date as checkDate, a.schedule_contents as scheduleContents,
				a.type, a.user_no as userNo, a.group_no as groupNo
			from schedule a, user b
			where a.user_no = b.no
				and a.check_date = #{date}
				and a.type = 'todo'
				and a.group_no = #{groupNo}
				order by a.no desc
	]]>
	</select>
	
	<select id="findGroupRepoList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
			select a.no, a.check_date as checkDate, a.schedule_contents as scheduleContents,
				a.type, a.user_no as userNo, a.group_no as groupNo, b.id
			from schedule a, user b
			where a.user_no = b.no
				and b.no = (select G.user_no from git G where G.no = a.schedule_refno)
				and a.check_date = #{date}
				and a.type = 'commit'
				and a.group_no =  #{groupNo}
				order by a.no desc
	]]>
	</select>
	
	
	<insert id="insertGroupToDo" parameterType="schedulevo">
	<![CDATA[
			insert into schedule 
			values(null, #{checkDate},#{scheduleContents},'todo',#{userNo},#{groupNo},null)
	]]>
	</insert>
	
	
	<select id="findCheckedGroupToDoDay" parameterType="long"
		resultType="schedulevo">
	<![CDATA[
		select check_date as checkDate
			from schedule
			where group_no = #{groupNo}
			and type = 'todo'
	]]>
	</select>
	
	<select id="findCheckedGroupCommitDay" parameterType="long"
		resultType="schedulevo">
	<![CDATA[
		select check_date as checkDate
			from schedule
			where group_no = #{groupNo}
			and type = 'commit'
	]]>
	</select>
	
	<select id="findGroupNaviCommitList" parameterType="map"
		resultType="schedulevo">
	<![CDATA[
		select check_date as checkDate
		from schedule
			where group_no = #{groupNo}
			and type = 'commit'
			and check_date like '%${date }%'
	]]>
	</select>
	
	<select id="findGroupMasterNo" parameterType="long"
		resultType="long">
	<![CDATA[
				select a.user_no as userNo
				  from group_list a, `group` b
                where a.group_no = b.no
                and a.group_no = #{groupNo}
                and a.`grant` = 'admin'
	]]>
	</select>
	
	
	<delete id="deleteGroupAll" parameterType="long">
		<![CDATA[		
				delete from schedule where group_no = #{no}
		]]>
	</delete>
	
	


</mapper>